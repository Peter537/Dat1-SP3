@startuml

' *****************
' CLASS
' *****************

class Main {
    + static void main(String[] args)
}

class ChillMedia {
    - final IDataIO dataIO
    - final ChillMediaFlow chillMediaFlow
    - final SessionCache sessionCache
    - final LogIn logIn

    + ChillMedia()
    - void load()
    + void run()

    - void listMovies()
    - void listSeries()

    + accessors methods()
}

class ChillMediaFlow {
    - final ChillMedia chillMedia
    - final IUser currentUser

    + ChillMediaFlow(ChillMedia chillMedia)

    + void searchMovies(int number)
    - void searchMoviesByTitle()
    - void searchMoviesByGenre()
    - void searchMoviesByRating()
    - void searchMyMovies()
    - void searchMyWatchedMovies()
    - void searchMovies(ArrayList<IMovie> movies)

    + void searchSeries(int number)
    - void searchSeriesByTitle()
    - void searchSeriesByGenre()
    - void searchSeriesByRating()
    - void searchSeries(ArrayList<ISeries> seriesList)

    - int chooseSeries(ArrayList<ISeries> series, int page, int pageSize)
    - int chooseMovie(ArrayList<IMovie> movies, int page, int pageSize)
    - int chooseMedia(ArrayList<IMedia> media, int page, int pageSize)

    - void addMovieToMyMovies(IMovie movie)
    - void removeMovieFromMyMovies(IMovie movie)
    - void watchMovie(IMovie movie)
    - void watchSeries(ISeries series)

    - int selectMovieOptions()
    - int selectSeriesOptions()

    - accessors methods()
}

class LogIn {
    - IUser currentUser
    - final TextIO textIO
    - final ArrayList<IUser> users

    + LogIn(ChillMedia cm)

    + void logIn()
    - void signUp()
    - void signIn()
    - void createUser(String name, String email, String password, int age)
    - boolean checkEmailInList(String email)
    - IUser getUser(String email, String password)

    + accessors methods()
}

class SessionCache {
    - final ArrayList<IMovie> movies
    - final ArrayList<ISeries> series
    - IUser user

    + SessionCache()

    + accessors methods()
}

class Query {
    ' STATIC CLASS, EVT. KUNNE MAN LAVE EN INSTANS AF DENNE
    ' OG BRUGE DEN I CHILLMEDIA OG DERFRA BRUGE QUERY
    + static ArrayList<ISeries> searchSeriesGenre(ArrayList<ISeries> series, IGenre genre)
    + static ArrayList<ISeries> searchSeriesGenre(ArrayList<ISeries> series, String genre)
    + static ArrayList<ISeries> searchSeriesGenreAgeRestricted(ArrayList<ISeries> series, IGenre genre)
    + static ArrayList<ISeries> searchSeriesGenreAgeRestricted(ArrayList<ISeries> series, String genre)
    + static ArrayList<IMovie> searchMovieGenre(ArrayList<IMovie> movies, IGenre genre)
    + static ArrayList<IMovie> searchMovieGenre(ArrayList<IMovie> movies, String genre)
    + static ArrayList<IMovie> searchMovieGenreAgeRestricted(ArrayList<IMovie> movies, IGenre genre)
    + static ArrayList<IMovie> searchMovieGenreAgeRestricted(ArrayList<IMovie> movies, String genre)
    + static ArrayList<IMedia> searchGenre(ArrayList<IMedia> movies, IGenre genre)
    + static ArrayList<IMedia> searchGenre(ArrayList<IMedia> movies, String genre)
    + static ArrayList<IMedia> searchGenreAgeRestricted(ArrayList<IMedia> movies, IGenre genre)
    + static ArrayList<IMedia> searchGenreAgeRestricted(ArrayList<IMedia> movies, String genre)

    + static ArrayList<ISeries> searchSeriesTitle(ArrayList<ISeries> series, String title)
    + static ISeries searchSeriesTitleSingle(ArrayList<ISeries> series, String title)
    + static ArrayList<IMovie> searchMovieTitle(ArrayList<IMovie> movies, String title)
    + static IMovie searchMovieTitleSingle(ArrayList<IMovie> movies, String title)
    + static ArrayList<IMedia> searchTitle(ArrayList<IMedia> medias, String title)

    + static ArrayList<ISeries> searchSeriesRating(ArrayList<ISeries> series, float minimumRating)
    + static ArrayList<IMovie> searchMovieRating(ArrayList<IMovie> movies, float minimumRating)
    + static ArrayList<IMedia> searchRating(ArrayList<IMedia> media, float minimumRating)
}

class TextIO {
    - static final Scanner scanner

    + static String getUserInput(String msg)
    + static String getUserInput(String msg, String[] options)
    + static String getUserInput(String msg, int startIndex, String[] options)
    + static String getUserInputFromMedia(String msg, int page, int pageSize, ArrayList<IMedia> media)

    + static void println(String msg)
    + static void print(String msg)
    + static void clearConsole()

    - static Scanner getScanner()
}

class FileIO implements IDataIO {
    - ArrayList<IMovie> movies
    - final String userPath
    - final String moviePath
    - final String seriesPath

    + ArrayList<IUser> loadUsers()
    - ArrayList<IUser> loadUsersFromJson()

    + void save(ArrayList<IUser> users)
    - void saveAsJson(ArrayList<IUser> users)

    + ArrayList<IMovie> loadMovies()
    + ArrayList<ISeries> loadSeries()
}

class User implements IUser {
    - static int idCounter
    - final int id
    - final String name
    - final String email
    - final String password
    - final int age
    - final ArrayList<IMovie> myMovies
    - final ArrayList<IMovie> watchedMovies

    + User(int id, String name, String email, String password, int age, ArrayList<IMovie> myMovies, ArrayList<IMovie> watchedMovies)
    + boolean addMyMovie(IMovie movie)
    + boolean removeMyMovie(IMovie movie)
    + void addWatchedMovie(IMovie movie)
    + boolean isAdult()

    + accessors methods()
}

class Movie extends AWatchable implements IMovie {
    - final int year

    + Movie(String title, float rating, ArrayList<IGenre> genres, int year)

    + accessors methods()
}

class Series extends AWatchable implements ISeries {
    - final int startYear
    - final int endYear
    - final ArrayList<Season> seasons

    + Series(String title, int startYear, int endYear, float rating, ArrayList<IGenre> genres, ArrayList<Season> seasons)

    + accessors methods()
}

class Season {
    - final int seasonNumber
    - final int episodeCount

    + Season(int seasonNumber, int episodeCount)

    + accessors methods()
}

' *****************
' ABSTRACT CLASS
' *****************

abstract class AWatchable implements IMedia {
    - final String title
    - final float rating
    - final ArrayList<IGenre> genres

    + AWatchable(String title, float rating, ArrayList<IGenre> genres)

    + accessors methods()
}

' *****************
' INTERFACES
' *****************

interface IMedia {
    + String getTitle()
    + float getRating()
    + ArrayList<IGenre> getGenres()
}

interface ISeries extends IMedia {
    + int getStartYear()
    + int getEndYear()
    + ArrayList<Season> getSeasons()
}

interface IMovie extends IMedia {
    + int getYear()
}

interface IUser {
    + int getID()
    + String getName()
    + String getEmail()
    + String getPassword()
    + int getAge()
    + boolean isAdult()
    + ArrayList<IMovie> getMyMovies()
    + ArrayList<IMovie> getWatchedMovies()
    + boolean addToMyMovies(IMovie movie)
    + boolean removeFromMyMovies(IMovie movie)
    + void addWatchedMovie(IMovie movie)
}

interface IDataIO {
    + ArrayList<IUser> loadUsers()
    + ArrayList<IMovie> loadMovies()
    + ArrayList<ISeries> loadSeries()
    + void saveUser(IUser user)
}

interface IGenre {
    + boolean isMovieGenre()
    + boolean isSeriesGenre()
    + boolean isAgeRestricted()
}

' *****************
' ENUMS
' *****************

enum Genre implements IGenre {
    - final boolean isMovieGenre
    - final boolean isSeriesGenre
    - final boolean isAgeRestricted

    + CRIME(true, true, true),
    + DRAMA(true, true, true),
    + BIOGRAPHY(true, true, false),
    + SPORT(true, true, false),
    + HISTORY(true, true, false),
    + ROMANCE(true, true, false),
    + WAR(true, true, true),
    + MYSTERY(true, true, false),
    + ADVENTURE(true, true, false),
    + FAMILY(true, true, false),
    + FANTASY(true, true, false),
    + THRILLER(true, true, true),
    + HORROR(true, true, true),
    + FILM_NOIR(false, true, false),
    + ACTION(true, true, false),
    + SCI_FI(true, true, false),
    + COMEDY(true, true, false),
    + MUSICAL(true, false, false),
    + WESTERN(true, true, true),
    + MUSIC(true, false, false),
    + TALK_SHOW(false, true, false),
    + DOCUMENTARY(false, true, false),
    + ANIMATION(false, true, false);

    + Genre(boolean isMovieGenre, boolean isSeriesGenre, boolean isAgeRestricted) { })

    + boolean isMovieGenre()
    + boolean isSeriesGenre()
    + boolean isAgeRestricted()
}

' *****************
' RELATIONS
' *****************

Main *-- ChillMedia

ChillMedia *-- IMedia
ChillMedia *-- IDataIO
ChillMedia *-- IUser
ChillMedia *-- LogIn
ChillMedia *-- ChillMediaFlow
ChillMedia *-- SessionCache

Series *-- Season

@enduml